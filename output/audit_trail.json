{
  "start_time": "2025-01-10T20:21:54.073724",
  "input_file": null,
  "configuration": {},
  "operations": [
    {
      "operation_name": "duplicate_handling",
      "description": "Remove duplicate rows from the dataset",
      "parameters": {
        "method": "auto"
      },
      "metrics": {
        "start_time": "2025-01-10T20:21:54.095503",
        "end_time": "2025-01-10T20:21:54.126751",
        "duration_seconds": 0.031248,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {},
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "missing_value_handling",
      "description": "Handle missing values in the dataset",
      "parameters": {
        "numerical_method": "knn",
        "categorical_method": "knn"
      },
      "metrics": {
        "start_time": "2025-01-10T20:21:54.126751",
        "end_time": "2025-01-10T20:21:54.477813",
        "duration_seconds": 0.351062,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "dtype_changes": {
            "reading_score": {
              "before": "float64",
              "after": "Int64"
            },
            "science_score": {
              "before": "float64",
              "after": "Int64"
            },
            "writing_score": {
              "before": "float64",
              "after": "Int64"
            },
            "test_preparation_course": {
              "before": "float64",
              "after": "Int64"
            }
          },
          "missing_values": {
            "before": 53,
            "after": 0,
            "difference": 53
          },
          "statistics_changes": {
            "lunch": {
              "mean_change": 0.010154398937693654,
              "std_change": -0.0036761172660405017,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "test_preparation_course": {
              "mean_change": -0.009972543128011158,
              "std_change": -0.002245458656442323,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "math_score": {
              "mean_change": -0.1613997824172415,
              "std_change": -0.08003956071659957,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "reading_score": {
              "mean_change": 0.13021063868565363,
              "std_change": -0.16916929196295172,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "writing_score": {
              "mean_change": 0.035696617804049424,
              "std_change": 0.23350129669362119,
              "min_change": 0.0,
              "max_change": 13.0
            },
            "science_score": {
              "mean_change": 0.015101279593842776,
              "std_change": -0.03322592611109698,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "total_score": {
              "mean_change": 0.05579177940987279,
              "std_change": -0.2996398919506902,
              "min_change": 0.0,
              "max_change": 0.0
            }
          }
        },
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "outlier_handling",
      "description": "Handle outliers in numerical features",
      "parameters": {
        "method": "winz",
        "outlier_param": 1.5
      },
      "metrics": {
        "start_time": "2025-01-10T20:21:54.478812",
        "end_time": "2025-01-10T20:21:54.507277",
        "duration_seconds": 0.028465,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {},
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "datetime_conversion",
      "description": "Convert and extract datetime features",
      "parameters": {
        "granularity": "s"
      },
      "metrics": {
        "start_time": "2025-01-10T20:21:54.507277",
        "end_time": "2025-01-10T20:21:54.545664",
        "duration_seconds": 0.038387,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {},
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "categorical_encoding",
      "description": "Encode categorical features",
      "parameters": {
        "method": [
          "auto"
        ]
      },
      "metrics": {
        "start_time": "2025-01-10T20:21:54.545664",
        "end_time": "2025-01-10T20:21:54.586636",
        "duration_seconds": 0.040972,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "dtype_changes": {
            "grade": {
              "before": "object",
              "after": "int64"
            },
            "race_ethnicity": {
              "before": "object",
              "after": "int64"
            },
            "roll_no": {
              "before": "object",
              "after": "int64"
            },
            "parental_level_of_education": {
              "before": "object",
              "after": "int64"
            },
            "gender": {
              "before": "object",
              "after": "int64"
            }
          }
        },
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "value_rounding",
      "description": "Round numerical values to appropriate precision",
      "parameters": {},
      "metrics": {
        "start_time": "2025-01-10T20:21:54.586636",
        "end_time": "2025-01-10T20:21:54.680043",
        "duration_seconds": 0.093407,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "dtype_changes": {
            "lunch": {
              "before": "float64",
              "after": "Int64"
            },
            "grade": {
              "before": "int64",
              "after": "Int64"
            },
            "math_score": {
              "before": "float64",
              "after": "Int64"
            },
            "race_ethnicity": {
              "before": "int64",
              "after": "Int64"
            },
            "roll_no": {
              "before": "int64",
              "after": "Int64"
            },
            "total_score": {
              "before": "float64",
              "after": "Int64"
            },
            "parental_level_of_education": {
              "before": "int64",
              "after": "Int64"
            },
            "gender": {
              "before": "int64",
              "after": "Int64"
            }
          },
          "statistics_changes": {
            "roll_no": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "gender": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "race_ethnicity": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "parental_level_of_education": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "lunch": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "math_score": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "total_score": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            },
            "grade": {
              "mean_change": 0.0,
              "std_change": 0.0,
              "min_change": 0.0,
              "max_change": 0.0
            }
          }
        },
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "Code Bias Analysis",
      "description": "Completed ai code bias analysis",
      "parameters": {
        "paths": [
          "c:/Users/habib/Documents/trywindsurf/preprocessing"
        ],
        "analysis_type": "ai"
      },
      "metrics": {
        "start_time": "2025-01-10T20:21:54.688654",
        "end_time": "2025-01-10T20:25:39.170521",
        "duration_seconds": 224.481867,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "results": [
            {
              "file": "c:\\Users\\habib\\Documents\\trywindsurf\\preprocessing\\data_cleaner.py",
              "analysis": {
                "is_problematic": false,
                "sensitivity_level": 0,
                "problematic_sections": [],
                "recommendations": [
                  "Error during analysis: startswith"
                ]
              }
            },
            {
              "file": "c:\\Users\\habib\\Documents\\trywindsurf\\preprocessing\\feature_engineering.py",
              "analysis": {
                "is_problematic": false,
                "sensitivity_level": 0,
                "problematic_sections": [],
                "recommendations": [
                  "Error during analysis: startswith"
                ]
              }
            },
            {
              "file": "c:\\Users\\habib\\Documents\\trywindsurf\\preprocessing\\sampling.py",
              "analysis": {
                "is_problematic": false,
                "sensitivity_level": 0,
                "problematic_sections": [],
                "recommendations": [
                  "Error during analysis: startswith"
                ]
              }
            }
          ]
        },
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "Fairness Analysis race_ethnicity",
      "description": "Analyze and mitigate bias for feature race_ethnicity",
      "parameters": {},
      "metrics": {
        "start_time": "2025-01-10T20:25:39.175604",
        "end_time": "2025-01-10T20:25:39.202355",
        "duration_seconds": 0.026751,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "results": {
            "original": {
              "disparate_impact": 0.9915254237288136,
              "statistical_parity_difference": -0.008474576271186418,
              "group_metrics": {
                "group_0_positive_rate": 0.9915254237288136,
                "group_1_positive_rate": 1.0
              }
            },
            "mitigated": {
              "disparate_impact": 0.9949748743718593,
              "statistical_parity_difference": -0.005025125628140725,
              "group_metrics": {
                "group_0_positive_rate": 0.9915254237288136,
                "group_1_positive_rate": 1.0
              }
            }
          }
        },
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "Fairness Analysis parental_level_of_education",
      "description": "Analyze and mitigate bias for feature parental_level_of_education",
      "parameters": {},
      "metrics": {
        "start_time": "2025-01-10T20:25:39.208905",
        "end_time": "2025-01-10T20:25:39.219838",
        "duration_seconds": 0.010933,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "results": {
            "original": {
              "disparate_impact": 0.9914529914529915,
              "statistical_parity_difference": -0.008547008547008517,
              "group_metrics": {
                "group_0_positive_rate": 0.9914529914529915,
                "group_1_positive_rate": 1.0
              }
            },
            "mitigated": {
              "disparate_impact": 0.9949748743718592,
              "statistical_parity_difference": -0.005025125628140836,
              "group_metrics": {
                "group_0_positive_rate": 0.9914529914529915,
                "group_1_positive_rate": 1.0
              }
            }
          }
        },
        "success": true,
        "error": null
      },
      "warnings": []
    },
    {
      "operation_name": "Fairness Analysis",
      "description": "Analyze and mitigate bias for each sensitive feature",
      "parameters": {},
      "metrics": {
        "start_time": "2025-01-10T20:25:39.174164",
        "end_time": "2025-01-10T20:25:39.219838",
        "duration_seconds": 0.045674,
        "input_shape": [
          199,
          12
        ],
        "output_shape": [
          199,
          12
        ],
        "changes_made": {
          "results": {
            "race_ethnicity": {
              "original": {
                "disparate_impact": 0.9915254237288136,
                "statistical_parity_difference": -0.008474576271186418,
                "group_metrics": {
                  "group_0_positive_rate": 0.9915254237288136,
                  "group_1_positive_rate": 1.0
                }
              },
              "mitigated": {
                "disparate_impact": 0.9949748743718593,
                "statistical_parity_difference": -0.005025125628140725,
                "group_metrics": {
                  "group_0_positive_rate": 0.9915254237288136,
                  "group_1_positive_rate": 1.0
                }
              }
            },
            "parental_level_of_education": {
              "original": {
                "disparate_impact": 0.9914529914529915,
                "statistical_parity_difference": -0.008547008547008517,
                "group_metrics": {
                  "group_0_positive_rate": 0.9914529914529915,
                  "group_1_positive_rate": 1.0
                }
              },
              "mitigated": {
                "disparate_impact": 0.9949748743718592,
                "statistical_parity_difference": -0.005025125628140836,
                "group_metrics": {
                  "group_0_positive_rate": 0.9914529914529915,
                  "group_1_positive_rate": 1.0
                }
              }
            }
          }
        },
        "success": true,
        "error": null
      },
      "warnings": []
    }
  ],
  "end_time": "2025-01-10T20:25:39.224307",
  "total_duration_seconds": 225.150583,
  "final_metrics": {
    "total_operations": 10,
    "successful_operations": 10,
    "success_rate": 1.0,
    "total_warnings": 0,
    "operations_with_errors": []
  }
}